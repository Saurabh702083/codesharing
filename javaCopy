@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ViewTransactionMis {

    private String merchantId;
    private String merchantName;
    private Character merchantCategory;
    private String orderRefNumber;
    private String atrnNum;
    private long instructionDateandTime;
    private  String currencyCode;
    private BigDecimal orderAmount;
    private BigDecimal totalFeeAbs;
    private String gstNumber;
    private Integer gatewayPostingAmount;
    private BigDecimal amountSettled;
    private BigDecimal availableRefundAmount;
    private String payMode;
    private String channelBank;
    private String gatewayTraceNumber;
    private String transactionStatus;
    private String remark;
    private String accessMedium;
    private String merchantRiskCategory;
    private String payProcId;
    private String payProcType;
    private String merchantAuthorize;
    private Date merchantAuthorizeDate;
    private String autoSettlement;
    private String bearableEntity;
    private String cin;
    private String failReason;
    private BigDecimal merchantFeeBearableAbs;
    private BigDecimal merchantGstBearableAbs;
    private BigDecimal customerFeeBearableAbs;
    private BigDecimal customerGstBearableAbs;
    private String sbuStatusDescription;
    private long paymentSuccessDate;
    private UUID rfsId;
}

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class OrderReport {
    private String transactionDate;
    private String merchantOrderNumber;
    private String customerId;
    private String transactionCurrency;
    private BigDecimal orderAmount;
    private String sbiOrderRefNumber;
    private String status;
    private Integer attempts;
    private String mId;
}
protected List<Object> convertToListOfObject(OrderReport orderReport) {
        List<Object> objectList = new ArrayList<>();
        objectList.add(StringUtils.isEmpty(orderReport.getTransactionDate()) ? StringUtils.EMPTY : orderReport.getTransactionDate());
        objectList.add(StringUtils.isEmpty(orderReport.getMerchantOrderNumber()) ? StringUtils.EMPTY : orderReport.getMerchantOrderNumber());
        objectList.add(StringUtils.isEmpty(orderReport.getCustomerId()) ? ReportingConstant.NOT_AVAILABLE : orderReport.getCustomerId());
        objectList.add(StringUtils.isEmpty(orderReport.getTransactionCurrency()) ? StringUtils.EMPTY : orderReport.getTransactionCurrency());
        objectList.add(ObjectUtils.isEmpty(orderReport.getOrderAmount()) ? StringUtils.EMPTY : orderReport.getOrderAmount());
        objectList.add(StringUtils.isEmpty(orderReport.getSbiOrderRefNumber()) ? StringUtils.EMPTY : orderReport.getSbiOrderRefNumber());
        objectList.add(StringUtils.isEmpty(orderReport.getStatus()) ? StringUtils.EMPTY : orderReport.getStatus());
        objectList.add(ObjectUtils.isEmpty(orderReport.getAttempts()) ? StringUtils.EMPTY : orderReport.getAttempts());
        return objectList;
    }
